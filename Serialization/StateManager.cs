#region License
// Copyright (c) 2014, David Taylor
//
// Permission to use, copy, modify, and/or distribute this software for any 
// purpose with or without fee is hereby granted, provided that the above 
// copyright notice and this permission notice appear in all copies, unless 
// such copies are solely in the form of machine-executable object code 
// generated by a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES 
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF 
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR 
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES 
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN 
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF 
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#endregion License
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace HotChai.Serialization
{
    internal sealed class StateManager<TState>
    {
        private Stack<TState> _state = new Stack<TState>();

        public TState Value
        {
            get { return this._state.Peek(); }
        }

        public void Push(
            TState state)
        {
            if (null == state)
            {
                throw new ArgumentNullException("state");
            }

            this._state.Push(state);
        }

        public void Pop()
        {
            if (this._state.Count <= 1)
            {
                throw new InvalidOperationException();
            }

            this._state.Pop();
        }

        public void Set(
            TState state)
        {
            if (this._state.Count > 0)
            {
                this._state.Pop();
            }

            this._state.Push(state);
        }
    }
}
